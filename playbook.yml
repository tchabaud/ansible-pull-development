#!/usr/bin/env ansible-playbook

- name: Gather prerequisites 
  hosts: all
  gather_facts: True
  tasks:
    - name: create groups based on distribution
      group_by: key={{ ansible_distribution }}
  environment:
    http_proxy: "{{ ansible_env.http_proxy }}"
    https_proxy: "{{ ansible_env.https_proxy }}"
    ftp_proxy: "{{ ansible_env.ftp_proxy }}"
    no_proxy: "{{ ansible_env.no_proxy }}"

- name: Install Version Control Systems
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Install Git
      apt: name=git state=latest update_cache=true cache_valid_time=600
    - name: Install Subversion
      apt: name=subversion state=latest update_cache=true cache_valid_time=600
    - name: Install Mercurial
      apt: name=mercurial state=latest update_cache=true cache_valid_time=600
    - name: Install XFS Tools
      apt: name=xfsprogs state=latest update_cache=true cache_valid_time=600

- name: Install Utilities
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Install sshpass for some of the Docker scripting
      apt: name=sshpass state=latest update_cache=true cache_valid_time=600
    - name: I am not sure why Firefox isn't installed so I'm doing it now
      apt: name=firefox state=latest update_cache=true cache_valid_time=600

- name: Install JDK
  hosts: Ubuntu
  sudo: True
  vars:
    java_version: jdk1.8.0_65
    java_path: 8u65-b17/jdk-8u65
  tasks:
    - name: Download Java 8 JDK
      command: wget --quiet --output-document=/root/jdk-8.tar.gz --no-check-certificate --no-cookies --header "Cookie:oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/{{ java_path }}-linux-x64.tar.gz
    - name: Create destination directory
      file: path=/usr/lib/jvm owner=root group=root state=directory mode=755
    - name: unpack the archive
      unarchive: src=/root/jdk-8.tar.gz dest=/usr/lib/jvm copy=no owner=root group=root mode=755 creates=/usr/lib/jvm/{{ java_version }}/COPYRIGHT
    - name: soft-link the JDK to a normalized location
      file: src=/usr/lib/jvm/{{ java_version }} dest=/usr/lib/jvm/oracle-jdk-8 owner=root group=root state=link
    - name: Export JDK_HOME
      lineinfile: dest=/etc/environment line='JDK_HOME=/usr/lib/jvm/oracle-jdk-8'
    - name: Export JAVA_HOME
      lineinfile: dest=/etc/environment line='JAVA_HOME=/usr/lib/jvm/oracle-jdk-8'
    - name: Export JAVA_CMD
      lineinfile: dest=/etc/environment line='JAVA_CMD=/usr/lib/jvm/oracle-jdk-8/bin/java'

- name: Install The Software Development Kit Manager
  hosts: Ubuntu
  sudo: True
  tasks:
    - name: Install cURL
      apt: name=curl state=latest
    - name: Copy GVM installation script to a safe place
      copy: src=scripts/install-gvm.sh dest=/tmp/install-gvm.sh owner=vagrant group=vagrant mode=755 backup=no
    - name: Install GVM
      shell: sudo --user vagrant --set-home --non-interactive --login /tmp/install-gvm.sh --
    - name: Create destination director
      file: path=/home/vagrant/.gvm/etc owner=vagrant group=vagrant state=directory mode=755
    - name: Copy GVM configuration file
      copy: src=files/gvm.config dest=/home/vagrant/.gvm/etc/config owner=vagrant group=vagrant mode=644 backup=no
    - name: Set permissions on the home directory
      file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Install Clojure
  hosts: Ubuntu
  sudo: False
  tasks:
      - name: Create bin directory
        file: path=/home/vagrant/bin owner=vagrant group=vagrant state=directory mode=755
      - name: Install Leiningen
        get_url: url=https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein dest=/home/vagrant/bin/lein mode=0744
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Apache Ant bits
  hosts: nobody
  sudo: False
  vars:
    ant_version: 1.9.6
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download Ant
        get_url: url=http://mirrors.ibiblio.org/apache/ant/binaries/apache-ant-{{ ant_version }}-bin.tar.gz dest=/home/vagrant/Downloads/ant.tar.gz mode=444
      - name: Unpack Ant
        unarchive: src=/home/vagrant/Downloads/ant.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/apache-ant-{{ ant_version }}/README
      - name: Soft-link Ant
        file: src=/home/vagrant/Software/apache-ant-{{ ant_version }} path=/home/vagrant/Software/ant state=link
      - name: Export ANT_HOME
        lineinfile: dest=/etc/environment line='ANT_HOME=/home/vagrant/Software/ant'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Apache Maven bits
  hosts: nobody
  sudo: False
  vars:
    maven_version: 3.3.3
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download Maven
        get_url: url=http://mirrors.ibiblio.org/apache/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz dest=/home/vagrant/Downloads/maven.tar.gz mode=444
      - name: Unpack Maven
        unarchive: src=/home/vagrant/Downloads/maven.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/apache-maven-{{ maven_version }}/NOTICE
      - name: Soft-link Maven
        file: src=/home/vagrant/Software/apache-maven-{{ maven_version }} path=/home/vagrant/Software/maven state=link
      - name: Export M2_HOME
        lineinfile: dest=/etc/environment line='M2_HOME=/home/vagrant/Software/maven'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Node
  hosts: Ubuntu
  sudo: True
  vars:
    node_version: v4.2.1
  tasks:
      - name: Download Node
        get_url: url=https://nodejs.org/dist/{{ node_version }}/node-{{ node_version }}-linux-x64.tar.gz dest=/root/node.tar.gz mode=444
      - name: Unpack Node
        unarchive: src=/root/node.tar.gz dest=/opt copy=no owner=root group=root creates=/opt/node-{{ node_version }}-linux-x64/LICENSE
      - name: Soft-link Node
        file: src=/opt/node-{{ node_version }}-linux-x64/bin/node path=/usr/local/bin/node state=link
      - name: Soft-link NPM
        file: src=/opt/node-{{ node_version }}-linux-x64/bin/npm path=/usr/local/bin/npm state=link
      - name: Set permissions on the opt directory
        file: path=/opt owner=root group=root recurse=true state=directory
      - name: Update npm
        command: /usr/local/bin/npm install -g npm@latest
      - name: Install Yeoman 
        npm: name=yo global=yes
      - name: Install Bower 
        npm: name=bower global=yes
      - name: Install Grunt 
        npm: name=grunt-cli global=yes
      - name: Install JHipster 
        npm: name=generator-jhipster global=yes

- name: Jetbrains IntelliJ IDEA
  hosts: nobody
  sudo: False
  vars:
    idea_version: 15.0.1
    idea_build: 143.382.35
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download IntelliJ IDEA
        get_url: url=http://download.jetbrains.com/idea/ideaIU-{{ idea_version }}.tar.gz dest=/home/vagrant/Downloads/idea.tar.gz mode=444
      - name: Unpack IntelliJ IDEA
        unarchive: src=/home/vagrant/Downloads/idea.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/idea-IU-{{ idea_build }}/build.txt
      - name: Soft-link IntelliJ
        file: src=/home/vagrant/Software/idea-IU-{{ idea_build }} path=/home/vagrant/Software/idea state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop IntelliJ file
        copy: src=files/InjelliJ.desktop dest=/home/vagrant/Desktop/InjelliJ.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Export IDEA_JDK
        lineinfile: dest=/etc/environment line='IDEA_JDK=/usr/lib/jvm/oracle-jdk-8'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrain's PyCharm IDE
  hosts: nobody
  sudo: False
  vars:
    pycharm_version: 5.0.1
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download PyCharm
        get_url: url=http://download.jetbrains.com/python/pycharm-professional-{{ pycharm_version }}.tar.gz dest=/home/vagrant/Downloads/pycharm.tar.gz mode=444
      - name: Unpack PyCharm
        unarchive: src=/home/vagrant/Downloads/pycharm.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/pycharm-{{ pycharm_version }}/build.txt
      - name: Soft-link PyCharm
        file: src=/home/vagrant/Software/pycharm-{{ pycharm_version }} path=/home/vagrant/Software/pycharm state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop PyCharm file
        copy: src=files/PyCharm.desktop dest=/home/vagrant/Desktop/PyCharm.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Export PYCHARM_JDK
        lineinfile: dest=/etc/environment line='PYCHARM_JDK=/usr/lib/jvm/oracle-jdk-8'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrain's WebStorm IDE
  hosts: nobody
  sudo: False
  vars:
    webstorm_version: 10.0.4
    webstorm_build: "141.1550"
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download WebStorm
        get_url: url=http://download.jetbrains.com/webstorm/WebStorm-{{ webstorm_version }}.tar.gz dest=/home/vagrant/Downloads/webstorm.tar.gz mode=444
      - name: Unpack WebStorm
        unarchive: src=/home/vagrant/Downloads/webstorm.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/WebStorm-{{ webstorm_build }}/build.txt
      - name: Soft-link WebStorm
        file: src=/home/vagrant/Software/WebStorm-{{ webstorm_build }} path=/home/vagrant/Software/webstorm state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop WebStorm file
        copy: src=files/WebStorm.desktop dest=/home/vagrant/Desktop/WebStorm.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Export WEBIDE_JDK
        lineinfile: dest=/etc/environment line='WEBIDE_JDK=/usr/lib/jvm/oracle-jdk-8'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrain's RubyMine IDE
  hosts: nobody
  sudo: False
  vars:
    rubymine_version: 7.1.4
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download RubyMine
        get_url: url=http://download.jetbrains.com/ruby/RubyMine-{{ rubymine_version }}.tar.gz dest=/home/vagrant/Downloads/rubymine.tar.gz mode=444
      - name: Unpack RubyMine
        unarchive: src=/home/vagrant/Downloads/rubymine.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/RubyMine-{{ rubymine_version }}/build.txt
      - name: Soft-link RubyMine
        file: src=/home/vagrant/Software/RubyMine-{{ rubymine_version }} path=/home/vagrant/Software/rubymine state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop RubyMine file
        copy: src=files/RubyMine.desktop dest=/home/vagrant/Desktop/RubyMine.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Export RUBYMINE_JDK
        lineinfile: dest=/etc/environment line='RUBYMINE_JDK=/usr/lib/jvm/oracle-jdk-8'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrains CLion IDE
  hosts: nobody
  sudo: False
  vars:
    clion_version: 1.2.1
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download CLion
        get_url: url=http://download.jetbrains.com/cpp/clion-{{ clion_version}}.tar.gz dest=/home/vagrant/Downloads/clion.tar.gz mode=444
      - name: Unpack CLion
        unarchive: src=/home/vagrant/Downloads/clion.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/clion-{{ clion_version }}/build.txt
      - name: Soft-link CLion
        file: src=/home/vagrant/Software/clion-{{ clion_version }} path=/home/vagrant/Software/clion state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop CLion file
        copy: src=files/CLion.desktop dest=/home/vagrant/Desktop/CLion.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Export CL_JDK
        lineinfile: dest=/etc/environment line='CL_JDK=/usr/lib/jvm/oracle-jdk-8'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrains oxDBE IDE
  hosts: nobody
  sudo: False
  vars:
    dbe_version: 143.1040.1 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download 0xDBE
        get_url: url=http://download.jetbrains.com/dbe/0xdbe-{{ dbe_version }}.tar.gz dest=/home/vagrant/Downloads/dbe.tar.gz mode=444
      - name: Unpack 0xDBE
        unarchive: src=/home/vagrant/Downloads/dbe.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/0xDBE-{{ dbe_version }}/build.txt
      - name: Soft-link 0xDBE
        file: src=/home/vagrant/Software/0xDBE-{{ dbe_version }} path=/home/vagrant/Software/0xdbe state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop 0xDBE file
        copy: src=files/0xDBE.desktop dest=/home/vagrant/Desktop/0xDBE.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Export dbe_JDK
        lineinfile: dest=/etc/environment line='dbe_JDK=/usr/lib/jvm/oracle-jdk-8'
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory


- name: Charles proxy bits 
  hosts: nobody
  sudo: False
  vars:
    charles_version: 3.11.1
  tasks:
      - name: Create Software directory 
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download Charles 
        get_url: url=http://www.charlesproxy.com/assets/release/{{ charles_version }}/charles-proxy-{{ charles_version }}.tar.gz dest=/home/vagrant/Downloads/charles.tar.gz mode=444 
      - name: Unpack Charles 
        unarchive: src=/home/vagrant/Downloads/charles.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/charles/icon/charles_icon16.png
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop Charles file  
        copy: src=files/Charles.desktop dest=/home/vagrant/Desktop/Charles.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: DbVisualizer Database Browser 
  hosts: nobody
  sudo: False
  vars:
    dbvis_version: 9.2.12
    dbvis_path: "9_2_12"
  tasks:
      - name: Create Software directory 
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download DbVisualizer 
        get_url: url=https://www.dbvis.com/product_download/dbvis-{{ dbvis_version }}/media/dbvis_unix_{{ dbvis_path }}.tar.gz dest=/home/vagrant/Downloads/dbvis.tar.gz mode=444 
      - name: Unpack DbVisualizer 
        unarchive: src=/home/vagrant/Downloads/dbvis.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/DbVisualizer
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop DbVisualizer file  
        copy: src=files/Database.desktop dest=/home/vagrant/Desktop/Database.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: logFACES Client 
  hosts: nobody
  sudo: False
  vars:
    logfaces_version: 4.2.1
  tasks:
      - name: Create Software directory 
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Create Downloads directory
        file: path=/home/vagrant/Downloads owner=vagrant group=vagrant state=directory mode=755
      - name: Download logFACES 
        get_url: url=http://www.moonlit-software.com/logfaces/downloads/lfc.{{ logfaces_version }}.linux.gtk.x86_64.tar.gz dest=/home/vagrant/Downloads/logfaces.tar.gz mode=444 
      - name: Unpack logFACES 
        unarchive: src=/home/vagrant/Downloads/logfaces.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/logFacesClient/about.html
      - name: soft-link the JDK to a normalized location
        file: src=/usr/lib/jvm/oracle-jdk-8/jre dest=/home/vagrant/Software/logFacesClient/jre owner=root group=root state=link
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop logFACES file  
        copy: src=files/logFACES.desktop dest=/home/vagrant/Desktop/logFACES.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: MySQL Tools
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: Install MySQL client
        apt: name=mysql-client state=latest
      - name: Install MySQL Workbench
        apt: name=mysql-workbench state=latest

- name: Create Source Folders
  hosts: Ubuntu
  sudo: False
  tasks:
      - name: Create GitHub directory
        file: path=/home/vagrant/GitHub owner=vagrant group=vagrant state=directory mode=755
      - name: Create Bitbucket directory
        file: path=/home/vagrant/Bitbucket owner=vagrant group=vagrant state=directory mode=755
      - name: Create Stash directory
        file: path=/home/vagrant/Stash owner=vagrant group=vagrant state=directory mode=755
      - name: Create .lazybones directory
        file: path=/home/vagrant/.lazybones owner=vagrant group=vagrant state=directory mode=755
      - name: Copy lazybones configurations file
        copy: src=files/config.groovy dest=/home/vagrant/.lazybones/config.groovy owner=vagrant group=vagrant backup=no mode=744

- name: Install Docker Container Launchers
  hosts: Ubuntu
  sudo: False
  tasks:
      - name: Create GitHub directory
        file: path=/home/vagrant/GitHub owner=vagrant group=vagrant state=directory mode=755
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Create bin directory
        file: path=/home/vagrant/bin owner=vagrant group=vagrant state=directory mode=755

      - name: Checkout IntelliJ Container
        git: repo=https://github.com/kurron/docker-intellij.git dest=/home/vagrant/GitHub/docker-intellij
      - name: Copy desktop IntelliJ file
        copy: src=files/IntelliJ-Docker.desktop dest=/home/vagrant/Desktop/IntelliJ-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout PyCharm Container
        git: repo=https://github.com/kurron/docker-pycharm.git dest=/home/vagrant/GitHub/docker-pycharm
      - name: Copy desktop PyCharm file
        copy: src=files/PyCharm-Docker.desktop dest=/home/vagrant/Desktop/PyCharm-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout WebStorm Container
        git: repo=https://github.com/kurron/docker-webstorm.git dest=/home/vagrant/GitHub/docker-webstorm
      - name: Copy desktop WebStorm file
        copy: src=files/WebStorm-Docker.desktop dest=/home/vagrant/Desktop/WebStorm-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout PhpStorm Container
        git: repo=https://github.com/kurron/docker-php-storm.git dest=/home/vagrant/GitHub/docker-php-storm
      - name: Copy desktop PhpStorm file
        copy: src=files/PhpStorm-Docker.desktop dest=/home/vagrant/Desktop/PhpStorm-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout RubyMine Container
        git: repo=https://github.com/kurron/docker-rubymine.git dest=/home/vagrant/GitHub/docker-rubymine
      - name: Copy desktop RubyMine file
        copy: src=files/RubyMine-Docker.desktop dest=/home/vagrant/Desktop/RubyMine-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout CLion Container
        git: repo=https://github.com/kurron/docker-clion.git dest=/home/vagrant/GitHub/docker-clion
      - name: Copy desktop CLion file
        copy: src=files/CLion-Docker.desktop dest=/home/vagrant/Desktop/CLion-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout DataGrip Container
        git: repo=https://github.com/kurron/docker-0xdbe.git dest=/home/vagrant/GitHub/docker-0xdbe
      - name: Copy desktop DataGrip file
        copy: src=files/0xDBE-Docker.desktop dest=/home/vagrant/Desktop/0xDBE-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout Charles Container
        git: repo=https://github.com/kurron/docker-charles-proxy.git dest=/home/vagrant/GitHub/docker-charles-proxy
      - name: Copy desktop Charles file
        copy: src=files/Charles-Docker.desktop dest=/home/vagrant/Desktop/Charles-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout DbVisualizer Container
        git: repo=https://github.com/kurron/docker-dbvisualizer.git dest=/home/vagrant/GitHub/docker-dbvisualizer
      - name: Copy desktop DbVisualizer file
        copy: src=files/Database-Docker.desktop dest=/home/vagrant/Desktop/Database-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout logFaces Container
        git: repo=https://github.com/kurron/docker-logfaces-client.git dest=/home/vagrant/GitHub/docker-logfaces-client
      - name: Copy desktop logFaces file
        copy: src=files/logFACES-Docker.desktop dest=/home/vagrant/Desktop/logFACES-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout Emacs Container
        git: repo=https://github.com/kurron/docker-emacs.git dest=/home/vagrant/GitHub/docker-emacs
      - name: Copy desktop Emacs file
        copy: src=files/Emacs-Docker.desktop dest=/home/vagrant/Desktop/Emacs-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout JMeter Container
        git: repo=https://github.com/kurron/docker-jmeter.git dest=/home/vagrant/GitHub/docker-jmeter
      - name: Copy desktop JMeter file
        copy: src=files/JMeter-Docker.desktop dest=/home/vagrant/Desktop/JMeter-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout Android Studio Container
        git: repo=https://github.com/kurron/docker-android-studio.git dest=/home/vagrant/GitHub/docker-android-studio
      - name: Copy desktop Android Studio file
        copy: src=files/Studio-Docker.desktop dest=/home/vagrant/Desktop/Studio-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout MPS Container
        git: repo=https://github.com/kurron/docker-mps.git dest=/home/vagrant/GitHub/docker-mps
      - name: Copy desktop MPS file
        copy: src=files/MPS-Docker.desktop dest=/home/vagrant/Desktop/MPS-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout STS Container
        git: repo=https://github.com/kurron/docker-sts.git dest=/home/vagrant/GitHub/docker-sts
      - name: Copy desktop STS file
        copy: src=files/STS-Docker.desktop dest=/home/vagrant/Desktop/STS-Docker.desktop owner=vagrant group=vagrant backup=no mode=755

      - name: Checkout Ant Container
        git: repo=https://github.com/kurron/docker-ant.git dest=/home/vagrant/GitHub/docker-ant
      - name: Soft link Ant Container
        file: src=/home/vagrant/GitHub/docker-ant/ant.sh path=/home/vagrant/bin/ant state=link

      - name: Checkout Maven Container
        git: repo=https://github.com/kurron/docker-maven.git dest=/home/vagrant/GitHub/docker-maven
      - name: Soft link Maven Container
        file: src=/home/vagrant/GitHub/docker-maven/mvn.sh path=/home/vagrant/bin/mvn state=link

      - name: Checkout Java Container
        git: repo=https://github.com/kurron/docker-java-runtime.git dest=/home/vagrant/GitHub/docker-java-runtime
      - name: Soft link Java Container
        file: src=/home/vagrant/GitHub/docker-java-runtime/java.sh path=/home/vagrant/bin/jrt state=link

      - name: Checkout Scala Container
        git: repo=https://github.com/kurron/docker-scala.git dest=/home/vagrant/GitHub/docker-scala
      - name: Soft link FSC Command
        file: src=/home/vagrant/GitHub/docker-scala/fsc.sh path=/home/vagrant/bin/fsc state=link
      - name: Soft link scalac Command
        file: src=/home/vagrant/GitHub/docker-scala/scalac.sh path=/home/vagrant/bin/scalac state=link
      - name: Soft link Scala REPL Command
        file: src=/home/vagrant/GitHub/docker-scala/scala-repl.sh path=/home/vagrant/bin/scala-repl state=link
      - name: Soft link Scala Command
        file: src=/home/vagrant/GitHub/docker-scala/scala.sh path=/home/vagrant/bin/scala state=link

      - name: Allow connecting to the X server 
        lineinfile: dest=/home/vagrant/.bashrc line='/usr/bin/xhost +'

      - name: Copy image priming file
        copy: src=scripts/prime-images.sh dest=/home/vagrant/bin/prime-images.sh owner=vagrant group=vagrant backup=no mode=755

      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: FFmpeg binary
  hosts: Ubuntu
  sudo: True
  vars:
    ffmpeg_version: 2.8.4
  tasks:
      - name: Download FFmpeg
        get_url: url=http://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz dest=/root/ffmpeg-{{ ffmpeg_version }}.tar.xz mode=444
      - name: Unpack FFmpeg
        unarchive: src=/root/ffmpeg-{{ ffmpeg_version }}.tar.xz dest=/opt copy=no owner=root group=root creates=/opt/ffmpeg-{{ ffmpeg_version }}-64bit-static/ffprobe
      - name: Soft-link FFmpeg
        file: src=/opt/ffmpeg-{{ ffmpeg_version }}-64bit-static path=/opt/ffmpeg state=link
      - name: Set permissions on the opt directory
        file: path=/opt owner=root group=root recurse=true state=directory

- name: Install HTTP IE (cURL replacement)
  hosts: Ubuntu
  sudo: True
  tasks:
      - pip: name=setuptools
      - pip: name=httpie

- name: Install Benchmarking Tools
  hosts: Ubuntu
  sudo: True
  tasks:
      - name: Install Apache Benchmark
        apt: name=apache2-utils state=latest update_cache=true cache_valid_time=600
      - name: Install httping
        apt: name=httping state=latest update_cache=true cache_valid_time=600

- name: Add host names for Dockered services
  hosts: Ubuntu
  sudo: True
  tasks:
      - lineinfile: dest=/etc/hosts line='127.0.0.1 mongo'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 mongodb'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 redis'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 mysql'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 postgresql'
      - lineinfile: dest=/etc/hosts line='127.0.0.1 rabbitmq'
